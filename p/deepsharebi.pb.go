// Code generated by protoc-gen-go.
// source: deepsharebi.proto
// DO NOT EDIT!

package p

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type DeepshareBiLog struct {
	Os               *string `protobuf:"bytes,1,opt,name=os" json:"os,omitempty"`
	OsVersion        *string `protobuf:"bytes,2,opt,name=osVersion" json:"osVersion,omitempty"`
	DeviceId         *string `protobuf:"bytes,3,opt,name=deviceId" json:"deviceId,omitempty"`
	Ip               *string `protobuf:"bytes,4,opt,name=ip" json:"ip,omitempty"`
	Param            *string `protobuf:"bytes,5,opt,name=param" json:"param,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DeepshareBiLog) Reset()         { *m = DeepshareBiLog{} }
func (m *DeepshareBiLog) String() string { return proto.CompactTextString(m) }
func (*DeepshareBiLog) ProtoMessage()    {}

func (m *DeepshareBiLog) GetOs() string {
	if m != nil && m.Os != nil {
		return *m.Os
	}
	return ""
}

func (m *DeepshareBiLog) GetOsVersion() string {
	if m != nil && m.OsVersion != nil {
		return *m.OsVersion
	}
	return ""
}

func (m *DeepshareBiLog) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

func (m *DeepshareBiLog) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *DeepshareBiLog) GetParam() string {
	if m != nil && m.Param != nil {
		return *m.Param
	}
	return ""
}

var E_DeepshareLog = &proto.ExtensionDesc{
	ExtendedType:  (*BiLog)(nil),
	ExtensionType: (*DeepshareBiLog)(nil),
	Field:         101,
	Name:          "p.deepshareLog",
	Tag:           "bytes,101,opt,name=deepshareLog",
}

func init() {
	proto.RegisterExtension(E_DeepshareLog)
}
